# -*- coding: utf-8 -*-
"""spectral.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZSTo2q9uFGPeqCVeNXfOBYjMaada0phy

# Spectral (30 - 60 pts)

### 1. Explain Spectral clustering and different types of Laplassians

- Provide formulas via tex code
- Provide your text explanation
- Provide your plot demonstration

### 2. Given Data
"""

import numpy as np
import matplotlib.pyplot as plt

"""**Affinity matrix**

What is an **Affinity**?  It is a metric that determines how close, or **Similar**, two points in our space.
"""

A = np.array(
[[0.0, 0.8, 0.6, 0.0, 0.1, 0.0],
[0.8, 0.0, 0.8, 0.0, 0.0, 0.0],
[0.6, 0.8, 0.0, 0.2, 0.0, 0.0],
[0.0, 0.0, 0.2, 0.0, 0.8, 0.7],
[0.1, 0.0, 0.0, 0.8, 0.0, 0.8],
[0.0, 0.0, 0.0, 0.7, 0.8, 0.0]]
)
plt.imshow(A, cmap='hot', interpolation='nearest')
_ = plt.show()

"""**Unnormalized Laplacian matrix**"""

L = np.array(
[[1.5, -0.8, -0.6, 0.0, -0.1, 0.0],
[-0.8, 1.6, -0.8, 0.0, 0.0, 0.0],
[-0.6, -0.8, 1.6, -0.2, 0.0, 0.0],
[0.0, 0.0, -0.2, 1.7, -0.8, -0.7],
[-0.1, 0.0, 0.0, -0.8, 1.7, -0.8],
[0.0, 0.0, 0.0, -0.7, -0.8, 1.5]]
)

"""### 3. Perform the rest of steps for spectral clustering"""

eigenvalues, eigenvectors = np.linalg.eig(L)
eigenvalues, eigenvectors


plt.plot(eigenvalues)
_ = plt.show()

"""### 5. Apply k-mean (with k=2) algorithm to given dataset"""



"""### 6. Show all the steps and the resulting clusters (as it was manual)

Answer:

**The basic idea:**

- Project your data into $R^{n}$
- Define an Affinity  matrix $A$  , using a Gaussian Kernel $K$  or say just an Adjacency matrix (i.e. $A_{i,j}=\delta_{i,j}$) 
- Construct the Graph Laplacian from $A$  (i.e. decide on a normalization)
- Solve an Eigenvalue problem , such as $L v=\lambda v$   (or a Generalized Eigenvalue problem $L v=\lambda D v $)
- Select $k$ eigenvectors $\{ v_{i}, i=1, k \}$  corresponding to the k lowest (or highest) eigenvalues  $\{ \lambda_{i}, i=1, k \}$ , to define a $k$-dimensional subspace $P^{t}LP$ 
- Form clusters in this subspace using, say, $k$-means
"""